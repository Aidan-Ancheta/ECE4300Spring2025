`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/15/2025 10:20:58 PM
// Design Name: 
// Module Name: regfile
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module regfile(
    input wire          clk,
                        rst,
                        regwrite,
    input wire [4:0]    rs,
                        rt,
                        rd,
    input wire [31:0]   writedata,
    output reg [31:0]   A_readdat1,
                        B_readdat2
);

// internal register file: 32 registers, 32 bits each
reg [31:0] REG [0:31];

initial begin
    REG[0] = 'h002300AA;
    REG[1] = 'h10654321;
    REG[2] = 'h00100022;
    REG[3] = 'hBC123456;
    REG[4] = 'hBF123456;
    REG[5] = 'hAD654321;
    REG[6] = 'h60000066;
    REG[7] = 'h13012345;
    REG[8] = 'hAC654321;
    REG[9] = 'h12012345;
end

always @(posedge clk) begin
    if (rst) begin
        // Set outputs to 0 on reset
        A_readdat1 <= 32'd0;
        B_readdat2 <= 32'd0;
    end
    else begin
        if (regwrite) begin
            // Write data to register
            REG[rd] <= writedata;
        end else begin
            // Read data from register
            A_readdat1 <= REG[rs];
            B_readdat2 <= REG[rt];
        end
    end
end

endmodule
